# ======================================================================================
# ADMIN –°–ö–†–ò–ü–¢ –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–£–ë–õ–ò–ö–ê–¢–û–í –í –°–ü–†–ê–í–û–ß–ù–ò–ö–ê–•
# ======================================================================================

import asyncio
import asyncpg
from dataclasses import dataclass


# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
# –õ–∏–±–æ —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env, –∫–∞–∫ –≤ –≤–∞—à–µ–º –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ
@dataclass
class DBSettings:
    user: str = "postgres"
    password: str = "mastdmastd"
    host: str = "localhost"
    port: int = 5432
    database: str = "goals_n_projects"

# –ù–∞–∑–≤–∞–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å
INCORRECT_REGION_NAME = "–≥. –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å\\"
CORRECT_REGION_NAME = "–≥. –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å"

# –¢–∞–±–ª–∏—Ü—ã, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å region_id
TABLES_TO_UPDATE = [
    "project_budgets",
    "project_activities",
    "indicator_yearly_values",
    "indicator_monthly_values",
]


async def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö.
    """
    settings = DBSettings()
    conn = None
    try:
        conn = await asyncpg.connect(
            user=settings.user,
            password=settings.password,
            host=settings.host,
            port=settings.port,
            database=settings.database
        )
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")

        # –ü–æ–ª—É—á–∞–µ–º ID –¥–ª—è –æ–±–æ–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤
        correct_region_id = await conn.fetchval("SELECT id FROM regions WHERE name = $1", CORRECT_REGION_NAME)
        incorrect_region_id = await conn.fetchval("SELECT id FROM regions WHERE name = $1", INCORRECT_REGION_NAME)

        if not correct_region_id:
            print(f"‚ùå –û–®–ò–ë–ö–ê: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–≥–∏–æ–Ω '{CORRECT_REGION_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ.")
            return
        if not incorrect_region_id:
            print(
                f"ü§∑‚Äç‚ôÇÔ∏è –ò–ù–§–û: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–µ–≥–∏–æ–Ω '{INCORRECT_REGION_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω —É–∂–µ —É–¥–∞–ª–µ–Ω. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ.")
            return

        print(
            f"–ù–∞–π–¥–µ–Ω—ã ID: '{CORRECT_REGION_NAME}' (ID: {correct_region_id}), '{INCORRECT_REGION_NAME}' (ID: {incorrect_region_id})")

        # –ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        async with conn.transaction():
            print("\n--- –ù–∞—á–∞–ª–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ---")
            for table in TABLES_TO_UPDATE:
                print(f"\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã: {table}...")

                # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º ID
                records_to_update = await conn.fetch(f"SELECT * FROM {table} WHERE region_id = $1", incorrect_region_id)

                if not records_to_update:
                    print(f"   –í —Ç–∞–±–ª–∏—Ü–µ '{table}' –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
                    continue

                updated_count = 0
                conflict_count = 0

                for record in records_to_update:
                    # –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –ø—ã—Ç–∞–µ–º—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    try:
                        # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø–∏—Å–∏ (–æ–±—ã—á–Ω–æ 'id')
                        record_id = record['id']
                        await conn.execute(
                            f"UPDATE {table} SET region_id = $1 WHERE id = $2",
                            correct_region_id, record_id
                        )
                        updated_count += 1
                    except asyncpg.UniqueViolationError:
                        # –õ–æ–≤–∏–º –æ—à–∏–±–∫—É –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
                        conflict_count += 1
                        print(f"   ‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ö–æ–Ω—Ñ–ª–∏–∫—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ '{table}' –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å id={record['id']}. "
                              f"–ó–∞–ø–∏—Å—å –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ '{CORRECT_REGION_NAME}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")

                print(
                    f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(records_to_update)}. –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}. –ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤: {conflict_count}.")

            # –£–¥–∞–ª—è–µ–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤
            print(f"\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞ '{INCORRECT_REGION_NAME}' (ID: {incorrect_region_id})...")
            await conn.execute("DELETE FROM regions WHERE id = $1", incorrect_region_id)
            print("   –†–µ–≥–∏–æ–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω.")

            print("\n--- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞) ---")

    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        print("--- –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã (–æ—Ç–∫–∞—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏) ---")
    finally:
        if conn:
            await conn.close()
            print("\nüîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")


if __name__ == "__main__":
    print("--- –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Ä–µ–≥–∏–æ–Ω–æ–≤ ---")
    # –í–ê–ñ–ù–û: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö!
    # input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...")
    asyncio.run(main())

