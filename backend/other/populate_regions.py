# populate_regions.py

import asyncio
import asyncpg
import json
from app.core.database import settings

# JSON –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏
json_data = """
{
  "results": [
    {"dim36175": "–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è"},
    {"dim36175": "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–ë–µ–ª–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ë—Ä—è–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–í–ª–∞–¥–∏–º–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–í–æ—Ä–æ–Ω–µ–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ò–≤–∞–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ö–∞–ª—É–∂—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ö–æ—Å—Ç—Ä–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ö—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–õ–∏–ø–µ—Ü–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–û—Ä–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–†—è–∑–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–°–º–æ–ª–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–¢–∞–º–±–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–¢–≤–µ—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–¢—É–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–Ø—Ä–æ—Å–ª–∞–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–≥. –ú–æ—Å–∫–≤–∞"},
    {"dim36175": "–°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–µ–ª–∏—è"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–æ–º–∏"},
    {"dim36175": "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (—Å –∞/–æ )"},
    {"dim36175": "–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (–±–µ–∑ –∞/–æ)"},
    {"dim36175": "–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–í–æ–ª–æ–≥–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ì–£ –ú–í–î –†–æ—Å—Å–∏–∏ –ø–æ –≥.–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥—É –∏ –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏"},
    {"dim36175": "–õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ú—É—Ä–º–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ù–æ–≤–≥–æ—Ä–æ–¥—Å–∫–∞—è  –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ü—Å–∫–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"},
    {"dim36175": "–°–µ–≤–µ—Ä–æ-–ö–∞–≤–∫–∞–∑—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –î–∞–≥–µ—Å—Ç–∞–Ω"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ò–Ω–≥—É—à–µ—Ç–∏—è"},
    {"dim36175": "–ö–∞–±–∞—Ä–¥–∏–Ω–æ-–ë–∞–ª–∫–∞—Ä—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"},
    {"dim36175": "–ö–∞—Ä–∞—á–∞–µ–≤–æ-–ß–µ—Ä–∫–µ—Å—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–µ–≤–µ—Ä–Ω–∞—è –û—Å–µ—Ç–∏—è - –ê–ª–∞–Ω–∏—è"},
    {"dim36175": "–ß–µ—á–µ–Ω—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"},
    {"dim36175": "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–Æ–∂–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–¥—ã–≥–µ—è"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞–ª–º—ã–∫–∏—è"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö—Ä—ã–º"},
    {"dim36175": "–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–ê—Å—Ç—Ä–∞—Ö–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–í–æ–ª–≥–æ–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–†–æ—Å—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–≥. –°–µ–≤–∞—Å—Ç–æ–ø–æ–ª—å"},
    {"dim36175": "–ü—Ä–∏–≤–æ–ª–∂—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë–∞—à–∫–æ—Ä—Ç–æ—Å—Ç–∞–Ω"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–∞—Ä–∏–π –≠–ª"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ú–æ—Ä–¥–æ–≤–∏—è"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢–∞—Ç–∞—Ä—Å—Ç–∞–Ω"},
    {"dim36175": "–£–¥–º—É—Ä—Ç—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"},
    {"dim36175": "–ß—É–≤–∞—à—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞"},
    {"dim36175": "–ü–µ—Ä–º—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–ö–∏—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ü–µ–Ω–∑–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–°–∞–º–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–°–∞—Ä–∞—Ç–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–£–ª—å—è–Ω–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–£—Ä–∞–ª—å—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–ö—É—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–¢—é–º–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (—Å –∞/–æ)"},
    {"dim36175": "–¢—é–º–µ–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å (–±–µ–∑ –∞/–æ)"},
    {"dim36175": "–•–∞–Ω—Ç—ã-–ú–∞–Ω—Å–∏–π—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥ - –Æ–≥—Ä–∞"},
    {"dim36175": "–Ø–º–∞–ª–æ-–ù–µ–Ω–µ—Ü–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–ß–µ–ª—è–±–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–°–∏–±–∏—Ä—Å–∫–∏–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ê–ª—Ç–∞–π"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –¢—ã–≤–∞"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –•–∞–∫–∞—Å–∏—è"},
    {"dim36175": "–ê–ª—Ç–∞–π—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–ò—Ä–∫—É—Ç—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ö–µ–º–µ—Ä–æ–≤—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å - –ö—É–∑–±–∞—Å—Å"},
    {"dim36175": "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–û–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–¢–æ–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–î–∞–ª—å–Ω–µ–≤–æ—Å—Ç–æ—á–Ω—ã–π —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –æ–∫—Ä—É–≥"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ë—É—Ä—è—Ç–∏—è"},
    {"dim36175": "–†–µ—Å–ø—É–±–ª–∏–∫–∞ –°–∞—Ö–∞ (–Ø–∫—É—Ç–∏—è)"},
    {"dim36175": "–ó–∞–±–∞–π–∫–∞–ª—å—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–ö–∞–º—á–∞—Ç—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–•–∞–±–∞—Ä–æ–≤—Å–∫–∏–π –∫—Ä–∞–π"},
    {"dim36175": "–ê–º—É—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ú–∞–≥–∞–¥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–°–∞—Ö–∞–ª–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ï–≤—Ä–µ–π—Å–∫–∞—è –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è –æ–±–ª–∞—Å—Ç—å"},
    {"dim36175": "–ß—É–∫–æ—Ç—Å–∫–∏–π –∞–≤—Ç–æ–Ω–æ–º–Ω—ã–π –æ–∫—Ä—É–≥"}
  ]
}
"""


async def main():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ë–î, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∏ –æ—á–∏—â–∞–µ—Ç —Ä–µ–≥–∏–æ–Ω—ã –∏–∑ JSON, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ö."""
    conn = None
    try:
        conn = await asyncpg.connect(
            user=settings.db_user, password=settings.db_password,
            database=settings.db_name, host=settings.db_host, port=settings.db_port
        )
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")

        data = json.loads(json_data)

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º set –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
        region_names = set()

        # –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ (–æ–∫—Ä—É–≥–∞, —Ñ–µ–¥–µ—Ä–∞—Ü–∏–∏ –∏ —Ç.–¥.)
        stop_words = ["–æ–∫—Ä—É–≥", "—Ñ–µ–¥–µ—Ä–∞—Ü–∏—è", "—Ñ–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π", "–º–≤–¥"]

        print("‚öôÔ∏è –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ–≥–∏–æ–Ω–æ–≤...")
        for item in data.get("results", []):
            name = item.get("dim36175", "").strip()

            # –û—á–∏—Å—Ç–∫–∞ –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤
            name = name.replace("\\", "").replace("(—Å –∞/–æ )", "").replace("(–±–µ–∑ –∞/–æ)", "").replace("(—Å 03.11.2018 –≥.)",
                                                                                                   "").replace(
                "(—Å 28.07.2016 –≥.)", "").strip()

            if not name:
                continue

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞
            if any(sw in name.lower() for sw in stop_words):
                print(f"  -> –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è: '{name}'")
                continue

            region_names.add(name)

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º set –æ–±—Ä–∞—Ç–Ω–æ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
        sorted_regions = sorted(list(region_names))

        print(f"üíæ –ù–∞–π–¥–µ–Ω–æ {len(sorted_regions)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        async with conn.transaction():
            for name in sorted_regions:
                # ON CONFLICT DO NOTHING - –µ—Å–ª–∏ —Ä–µ–≥–∏–æ–Ω —É–∂–µ –µ—Å—Ç—å, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—Ç—å
                await conn.execute("INSERT INTO regions (name) VALUES ($1) ON CONFLICT (name) DO NOTHING", name)

        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ/–ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(sorted_regions)} —Ä–µ–≥–∏–æ–Ω–æ–≤.")

    except Exception as e:
        print(f"üî• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

    finally:
        if conn:
            await conn.close()
            print("üõë –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ.")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–≥–∏–æ–Ω–æ–≤...")
    asyncio.run(main())